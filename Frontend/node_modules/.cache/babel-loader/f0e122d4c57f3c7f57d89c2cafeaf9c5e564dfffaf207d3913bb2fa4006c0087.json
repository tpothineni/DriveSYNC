{"ast":null,"code":"import axios from 'axios';\nfunction getCsrfToken() {\n  const match = document.cookie.match(/XSRF-TOKEN=([^;]+)/);\n  return match ? decodeURIComponent(match[1]) : null;\n}\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  withCredentials: true\n});\napi.interceptors.request.use(config => {\n  const token = getCsrfToken();\n  if (token) {\n    config.headers['X-XSRF-TOKEN'] = token;\n  }\n  return config;\n});\nexport default api;","map":{"version":3,"names":["axios","getCsrfToken","match","document","cookie","decodeURIComponent","api","create","baseURL","withCredentials","interceptors","request","use","config","token","headers"],"sources":["/Users/pothinenitarunkumar/Desktop/Frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\nfunction getCsrfToken() {\n  const match = document.cookie.match(/XSRF-TOKEN=([^;]+)/);\n  return match ? decodeURIComponent(match[1]) : null;\n}\n\nconst api = axios.create({\n  baseURL: 'http://localhost:8080',\n  withCredentials: true,\n});\n\napi.interceptors.request.use(config => {\n  const token = getCsrfToken();\n  if (token) {\n    config.headers['X-XSRF-TOKEN'] = token;\n  }\n  return config;\n});\n\nexport default api;\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,YAAYA,CAAA,EAAG;EACtB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,MAAM,CAACF,KAAK,CAAC,oBAAoB,CAAC;EACzD,OAAOA,KAAK,GAAGG,kBAAkB,CAACH,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI;AACpD;AAEA,MAAMI,GAAG,GAAGN,KAAK,CAACO,MAAM,CAAC;EACvBC,OAAO,EAAE,uBAAuB;EAChCC,eAAe,EAAE;AACnB,CAAC,CAAC;AAEFH,GAAG,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,IAAI;EACrC,MAAMC,KAAK,GAAGb,YAAY,CAAC,CAAC;EAC5B,IAAIa,KAAK,EAAE;IACTD,MAAM,CAACE,OAAO,CAAC,cAAc,CAAC,GAAGD,KAAK;EACxC;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;AAEF,eAAeP,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}